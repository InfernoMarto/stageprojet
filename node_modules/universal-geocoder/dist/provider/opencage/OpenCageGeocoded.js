"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Geocoded_1 = __importDefault(require("../../Geocoded"));
var OpenCageGeocoded = /** @class */ (function (_super) {
    __extends(OpenCageGeocoded, _super);
    function OpenCageGeocoded(_a) {
        var callingCode = _a.callingCode, flag = _a.flag, mgrs = _a.mgrs, maidenhead = _a.maidenhead, geohash = _a.geohash, what3words = _a.what3words, geocodedObject = __rest(_a, ["callingCode", "flag", "mgrs", "maidenhead", "geohash", "what3words"]);
        var _this = _super.call(this, geocodedObject) || this;
        _this.callingCode = callingCode;
        _this.flag = flag;
        _this.mgrs = mgrs;
        _this.maidenhead = maidenhead;
        _this.geohash = geohash;
        _this.what3words = what3words;
        return _this;
    }
    OpenCageGeocoded.create = function (object) {
        return new this(object);
    };
    OpenCageGeocoded.prototype.toObject = function () {
        return __assign(__assign({}, _super.prototype.toObject.call(this)), { callingCode: this.callingCode, flag: this.flag, mgrs: this.mgrs, maidenhead: this.maidenhead, geohash: this.geohash, what3words: this.what3words });
    };
    OpenCageGeocoded.prototype.withCallingCode = function (callingCode) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { callingCode: callingCode }));
    };
    OpenCageGeocoded.prototype.getCallingCode = function () {
        return this.callingCode;
    };
    OpenCageGeocoded.prototype.withFlag = function (flag) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { flag: flag }));
    };
    OpenCageGeocoded.prototype.getFlag = function () {
        return this.flag;
    };
    OpenCageGeocoded.prototype.withMgrs = function (mgrs) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { mgrs: mgrs }));
    };
    OpenCageGeocoded.prototype.getMgrs = function () {
        return this.mgrs;
    };
    OpenCageGeocoded.prototype.withMaidenhead = function (maidenhead) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { maidenhead: maidenhead }));
    };
    OpenCageGeocoded.prototype.getMaidenhead = function () {
        return this.maidenhead;
    };
    OpenCageGeocoded.prototype.withGeohash = function (geohash) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { geohash: geohash }));
    };
    OpenCageGeocoded.prototype.getGeohash = function () {
        return this.geohash;
    };
    OpenCageGeocoded.prototype.withWhat3words = function (what3words) {
        return new OpenCageGeocoded(__assign(__assign({}, this.toObject()), { what3words: what3words }));
    };
    OpenCageGeocoded.prototype.getWhat3words = function () {
        return this.what3words;
    };
    return OpenCageGeocoded;
}(Geocoded_1.default));
exports.default = OpenCageGeocoded;
//# sourceMappingURL=OpenCageGeocoded.js.map