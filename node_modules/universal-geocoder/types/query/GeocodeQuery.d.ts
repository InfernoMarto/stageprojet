import { Bounds } from "../index";
export interface GeocodeQueryObject {
    readonly text?: string;
    readonly ip?: string;
    readonly south?: number | string;
    readonly west?: number | string;
    readonly north?: number | string;
    readonly east?: number | string;
    readonly locale?: string;
    readonly limit?: number;
}
export default class GeocodeQuery {
    private readonly text?;
    private readonly ip?;
    private readonly south?;
    private readonly west?;
    private readonly north?;
    private readonly east?;
    private readonly locale?;
    private readonly limit;
    protected constructor({ text, ip, south, west, north, east, locale, limit, }: GeocodeQueryObject);
    static create(object: GeocodeQueryObject): GeocodeQuery;
    toObject(): GeocodeQueryObject;
    withText(text: string): GeocodeQuery;
    withIp(ip: string): GeocodeQuery;
    withBounds(south?: number, west?: number, north?: number, east?: number): GeocodeQuery;
    withLocale(locale: string): GeocodeQuery;
    withLimit(limit: number): GeocodeQuery;
    getText(): undefined | string;
    getIp(): undefined | string;
    getBounds(): undefined | Bounds;
    getLocale(): undefined | string;
    getLimit(): number;
}
//# sourceMappingURL=GeocodeQuery.d.ts.map