"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var query_1 = require("../../query");
var MapboxReverseQuery = /** @class */ (function (_super) {
    __extends(MapboxReverseQuery, _super);
    function MapboxReverseQuery(_a) {
        var countryCodes = _a.countryCodes, reverseMode = _a.reverseMode, types = _a.types, reverseQueryObject = __rest(_a, ["countryCodes", "reverseMode", "types"]);
        var _this = _super.call(this, reverseQueryObject) || this;
        _this.countryCodes = countryCodes;
        _this.reverseMode = reverseMode;
        _this.types = types;
        return _this;
    }
    MapboxReverseQuery.create = function (object) {
        return new this(object);
    };
    MapboxReverseQuery.prototype.toObject = function () {
        return __assign(__assign({}, _super.prototype.toObject.call(this)), { countryCodes: this.countryCodes, reverseMode: this.reverseMode, types: this.types });
    };
    MapboxReverseQuery.prototype.withCountryCodes = function (countryCodes) {
        return new MapboxReverseQuery(__assign(__assign({}, this.toObject()), { countryCodes: countryCodes }));
    };
    MapboxReverseQuery.prototype.getCountryCodes = function () {
        return this.countryCodes;
    };
    MapboxReverseQuery.prototype.withReverseMode = function (reverseMode) {
        return new MapboxReverseQuery(__assign(__assign({}, this.toObject()), { reverseMode: reverseMode }));
    };
    MapboxReverseQuery.prototype.getReverseMode = function () {
        return this.reverseMode;
    };
    MapboxReverseQuery.prototype.withTypes = function (types) {
        return new MapboxReverseQuery(__assign(__assign({}, this.toObject()), { types: types }));
    };
    MapboxReverseQuery.prototype.getTypes = function () {
        return this.types;
    };
    return MapboxReverseQuery;
}(query_1.ReverseQuery));
exports.default = MapboxReverseQuery;
//# sourceMappingURL=MapboxReverseQuery.js.map