import { GeocodeQuery, GeocodeQueryObject } from "../../query";
import { MapQuestLocation, MapQuestLocationObject } from "./..";
import Geocoded, { GeocodedObject } from "../../Geocoded";
export interface MapQuestGeocodeQueryObject extends GeocodeQueryObject {
    readonly location?: MapQuestLocationObject | MapQuestLocation | GeocodedObject | Geocoded;
}
export default class MapQuestGeocodeQuery extends GeocodeQuery {
    private readonly location?;
    protected constructor({ location, ...geocodeQueryObject }: MapQuestGeocodeQueryObject);
    static create(object: MapQuestGeocodeQueryObject): MapQuestGeocodeQuery;
    toObject(): MapQuestGeocodeQueryObject;
    withLocation(location: MapQuestLocationObject | MapQuestLocation | GeocodedObject | Geocoded): MapQuestGeocodeQuery;
    getLocation(): undefined | MapQuestLocationObject;
    private static convertGeocodedToLocationObject;
}
//# sourceMappingURL=MapQuestGeocodeQuery.d.ts.map